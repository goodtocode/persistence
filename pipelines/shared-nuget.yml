trigger:
  batch: true
  branches:
    include:
    - main
    - master
  paths:
    include:
    - src/*

variables:
- group: Development
- name: sourceDirectory
  value: '$(System.DefaultWorkingDirectory)/src'
- name: artifactDirectory
  value: '$(Build.ArtifactStagingDirectory)/../drop'
- name: buildConfiguration
  value: 'Release'
- name: MSBUILDSINGLELOADCONTEXT
  value: 1

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
        vmImage: 'windows-latest'

    steps:
    - task: PowerShell@2
      displayName: 'Set-Version'
      inputs:
        filePath: 'pipelines/Shared.Deploy/Assembly/Set-Version.ps1'
        arguments: '-Path $(System.DefaultWorkingDirectory) -VersionToReplace 5.20.1 -Major 05'
        workingDirectory: '$(sourceDirectory)'

    - task: DeleteFiles@1
      displayName: 'Delete unwanted projects'
      inputs:
        SourceFolder: $(System.DefaultWorkingDirectory)
        RemoveSourceFolder: true
        contents: |
          /docs/*
          /pipelines/*
          /samples/*
          /tests/*

    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'restore'
        projects: |
          $(sourceDirectory)/**/*.csproj
        feedsToUse: config
        nugetConfigPath: .nuget/NuGet.config

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: |
          $(sourceDirectory)/**/*.csproj
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Unit Test'
      inputs:
        command: test
        projects: |
          $(sourceDirectory)/**/*.csproj

    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack'
      inputs:
        command: pack
        projects: |
          $(sourceDirectory)/**/*.csproj
        arguments: '--output $(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'

- stage: Deploy
  displayName: 'Deploy stage'
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: 'Deploy'
    displayName: Deploy
    environment: 'development'
    pool:
        name: Hosted Windows 2019 with VS2019
        demands: msbuild

    strategy:
      runOnce:
        deploy:
          steps:
          - task: NuGetCommand@2
            displayName: 'nuget push'
            inputs:
              command: 'push'
              packagesToPush: '$(artifactDirectory)/**/*.nupkg'
              nuGetFeedType: 'internal'
              publishVstsFeed: '525a0dbd-3d6d-4f62-aba4-f4d004295d7d'
              allowPackageConflicts: true
